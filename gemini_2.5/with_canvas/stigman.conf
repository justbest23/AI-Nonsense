# /etc/stigman/nginx/conf.d/stigman.conf
# Place this file on your host, e.g., in /etc/stigman/nginx/conf.d/
# It will be mounted into the Nginx container.

# Increase buffer size for large uploads/requests if needed
client_max_body_size 50M;

# --- HTTP Server Block ---
# Redirects all HTTP traffic to HTTPS for security.
# Also handles Let's Encrypt ACME challenges if needed.
server {
    listen 80;
    # Replace <your_external_domain> with your actual domain name
    server_name <your_external_domain>;

    # Location block for Let's Encrypt certificate renewal challenges
    # Adjust the root path if your ACME client uses a different directory.
    location /.well-known/acme-challenge/ {
        root /var/www/html; # Standard path, adjust if needed
    }

    # Redirect all other HTTP requests to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# --- HTTPS Server Block ---
# Handles the main application traffic over TLS.
server {
    listen 443 ssl http2;
    # Replace <your_external_domain> with your actual domain name
    server_name <your_external_domain>;

    # --- SSL/TLS Configuration ---
    # Paths to the certificate and private key files within the container
    # These correspond to the volume mount paths defined in the quadlet.
    ssl_certificate /etc/nginx/certs/stigman.crt;
    ssl_certificate_key /etc/nginx/certs/stigman.key;

    # Modern TLS settings (OWASP recommended)
    # Adjust protocols/ciphers based on your security requirements and client compatibility.
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off; # Client chooses cipher suite

    # HTTP Strict Transport Security (Optional but Recommended)
    # Tells browsers to only connect via HTTPS for the specified duration.
    # Uncomment and potentially add 'preload' after testing thoroughly.
    # add_header Strict-Transport-Security "max-age=63072000; includeSubDomains" always;

    # --- Internal DNS Resolver ---
    # Uses Podman's internal DNS (127.0.0.11) to resolve services within the pod.
    resolver 127.0.0.11 valid=30s;

    # --- Proxy Pass for Keycloak ---
    # Forwards requests starting with /auth/ to the Keycloak container.
    location /auth/ {
        # Keycloak runs on port 8080 internally within the pod.
        proxy_pass http://localhost:8080/auth/;
        proxy_set_header Host $host; # Passes the original host header
        proxy_set_header X-Real-IP $remote_addr; # Passes the client's real IP
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # List of IPs including proxies
        # CRITICAL: These tell Keycloak it's behind a secure proxy.
        proxy_set_header X-Forwarded-Proto $scheme; # Should be 'https'
        proxy_set_header X-Forwarded-Host $host;    # Should be <your_external_domain>
        proxy_set_header X-Forwarded-Port $server_port; # Should be '443'
        proxy_buffering on; # Enable buffering
        proxy_http_version 1.1; # Use HTTP/1.1 for upstream connections
    }

    # --- Proxy Pass for STIG Manager API ---
    # Forwards requests starting with /api/ to the STIG Manager API container.
    location /api/ {
        # STIG Manager API runs on port 54000 internally within the pod.
        proxy_pass http://localhost:54000/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_buffering on;
        proxy_http_version 1.1;
    }

    # --- Serve STIG Manager Client Static Files ---
    # Serves the frontend application (HTML, CSS, JS).
    location / {
        # Corresponds to the volume mount for the client files in the Nginx quadlet.
        root /usr/share/nginx/html;
        # Standard configuration for Single Page Applications (SPAs)
        # Tries to serve the requested file, then directory, then falls back to index.html.
        try_files $uri $uri/ /index.html;
    }

    # --- Optional Security Headers ---
    # Uncomment and adjust as needed based on security scans/requirements.
    # add_header X-Frame-Options "SAMEORIGIN" always;
    # add_header X-Content-Type-Options "nosniff" always;
    # add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    # add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self'; img-src 'self' data:; font-src 'self';" always; # Example CSP, needs careful tuning

    # --- Logging ---
    # Define paths for access and error logs within the container.
    access_log /var/log/nginx/stigman_access.log;
    error_log /var/log/nginx/stigman_error.log;
}
